// +build !ignore_autogenerated

package target2

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	peer2 "k8s.io/gengo/examples/conversion-gen/output_tests/peer2"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Bar)(nil), (*peer2.Bar)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_target2_Bar_To_peer2_Bar(a.(*Bar), b.(*peer2.Bar), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*peer2.Bar)(nil), (*Bar)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_peer2_Bar_To_target2_Bar(a.(*peer2.Bar), b.(*Bar), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SubBarStruct)(nil), (*peer2.SubBarStruct)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_target2_SubBarStruct_To_peer2_SubBarStruct(a.(*SubBarStruct), b.(*peer2.SubBarStruct), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*peer2.SubBarStruct)(nil), (*SubBarStruct)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_peer2_SubBarStruct_To_target2_SubBarStruct(a.(*peer2.SubBarStruct), b.(*SubBarStruct), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*[]byte)(nil), (*[]byte)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_Slice_byte_To_Slice_byte(a.(*[]byte), b.(*[]byte), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*peer2.Bar)(nil), (*Bar)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_peer2_Bar_To_target2_Bar(a.(*peer2.Bar), b.(*Bar), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*peer2.SubBarStruct)(nil), (*SubBarStruct)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_peer2_SubBarStruct_To_target2_SubBarStruct(a.(*peer2.SubBarStruct), b.(*SubBarStruct), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_target2_Bar_To_peer2_Bar(in *Bar, out *peer2.Bar, s conversion.Scope) error {
	if err := Convert_target2_SubBarStruct_To_peer2_SubBarStruct(&in.SubStruct, &out.SubStruct, s); err != nil {
		return err
	}
	return nil
}

// Convert_target2_Bar_To_peer2_Bar is an autogenerated conversion function.
func Convert_target2_Bar_To_peer2_Bar(in *Bar, out *peer2.Bar, s conversion.Scope) error {
	return autoConvert_target2_Bar_To_peer2_Bar(in, out, s)
}

func autoConvert_peer2_Bar_To_target2_Bar(in *peer2.Bar, out *Bar, s conversion.Scope) error {
	return nil
}

func autoConvert_target2_SubBarStruct_To_peer2_SubBarStruct(in *SubBarStruct, out *peer2.SubBarStruct, s conversion.Scope) error {
	out.ByteSlice = *(*[]byte)(unsafe.Pointer(&in.ByteSlice))
	return nil
}

// Convert_target2_SubBarStruct_To_peer2_SubBarStruct is an autogenerated conversion function.
func Convert_target2_SubBarStruct_To_peer2_SubBarStruct(in *SubBarStruct, out *peer2.SubBarStruct, s conversion.Scope) error {
	return autoConvert_target2_SubBarStruct_To_peer2_SubBarStruct(in, out, s)
}

func autoConvert_peer2_SubBarStruct_To_target2_SubBarStruct(in *peer2.SubBarStruct, out *SubBarStruct, s conversion.Scope) error {
	out.ByteSlice = *(*[]byte)(unsafe.Pointer(&in.ByteSlice))
	return nil
}
