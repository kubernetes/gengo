// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package wholepkg

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	reflect "reflect"
)

// GetGeneratedDeepCopyFuncs returns the generated funcs, since we aren't registering them.
func GetGeneratedDeepCopyFuncs() []conversion.GeneratedDeepCopyFunc {
	return []conversion.GeneratedDeepCopyFunc{
		{Fn: DeepCopywholepkgManualStruct, InType: reflect.TypeOf(&ManualStruct{})},
		{Fn: DeepCopywholepkgManualStructAlias, InType: reflect.TypeOf(&ManualStructAlias{})},
		{Fn: DeepCopywholepkgStructB, InType: reflect.TypeOf(&StructB{})},
		{Fn: DeepCopywholepkgStructEmbedInt, InType: reflect.TypeOf(&StructEmbedInt{})},
		{Fn: DeepCopywholepkgStructEmbedManualStruct, InType: reflect.TypeOf(&StructEmbedManualStruct{})},
		{Fn: DeepCopywholepkgStructEmbedPointer, InType: reflect.TypeOf(&StructEmbedPointer{})},
		{Fn: DeepCopywholepkgStructEmbedStructPrimitivePointers, InType: reflect.TypeOf(&StructEmbedStructPrimitivePointers{})},
		{Fn: DeepCopywholepkgStructEmbedStructPrimitives, InType: reflect.TypeOf(&StructEmbedStructPrimitives{})},
		{Fn: DeepCopywholepkgStructEmbedStructSlices, InType: reflect.TypeOf(&StructEmbedStructSlices{})},
		{Fn: DeepCopywholepkgStructEmpty, InType: reflect.TypeOf(&StructEmpty{})},
		{Fn: DeepCopywholepkgStructEverything, InType: reflect.TypeOf(&StructEverything{})},
		{Fn: DeepCopywholepkgStructPrimitivePointers, InType: reflect.TypeOf(&StructPrimitivePointers{})},
		{Fn: DeepCopywholepkgStructPrimitivePointersAlias, InType: reflect.TypeOf(&StructPrimitivePointersAlias{})},
		{Fn: DeepCopywholepkgStructPrimitives, InType: reflect.TypeOf(&StructPrimitives{})},
		{Fn: DeepCopywholepkgStructPrimitivesAlias, InType: reflect.TypeOf(&StructPrimitivesAlias{})},
		{Fn: DeepCopywholepkgStructSlices, InType: reflect.TypeOf(&StructSlices{})},
		{Fn: DeepCopywholepkgStructSlicesAlias, InType: reflect.TypeOf(&StructSlicesAlias{})},
		{Fn: DeepCopywholepkgStructStructPrimitivePointers, InType: reflect.TypeOf(&StructStructPrimitivePointers{})},
		{Fn: DeepCopywholepkgStructStructPrimitives, InType: reflect.TypeOf(&StructStructPrimitives{})},
		{Fn: DeepCopywholepkgStructStructSlices, InType: reflect.TypeOf(&StructStructSlices{})},
	}
}

// DeepCopywholepkgManualStruct ...
func DeepCopywholepkgManualStruct(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ManualStruct)
		out := out.(*ManualStruct)
		*out = in.DeepCopy()
		return nil
	}
}

// DeepCopywholepkgManualStructAlias ...
func DeepCopywholepkgManualStructAlias(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*ManualStructAlias)
		out := out.(*ManualStructAlias)
		*out = *in
		return nil
	}
}

// DeepCopywholepkgStructB ...
func DeepCopywholepkgStructB(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructB)
		out := out.(*StructB)
		*out = *in
		return nil
	}
}

// DeepCopywholepkgStructEmbedInt ...
func DeepCopywholepkgStructEmbedInt(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructEmbedInt)
		out := out.(*StructEmbedInt)
		*out = *in
		return nil
	}
}

// DeepCopywholepkgStructEmbedManualStruct ...
func DeepCopywholepkgStructEmbedManualStruct(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructEmbedManualStruct)
		out := out.(*StructEmbedManualStruct)
		*out = *in
		out.ManualStruct = in.ManualStruct.DeepCopy()
		return nil
	}
}

// DeepCopywholepkgStructEmbedPointer ...
func DeepCopywholepkgStructEmbedPointer(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructEmbedPointer)
		out := out.(*StructEmbedPointer)
		*out = *in
		if in.int != nil {
			in, out := &in.int, &out.int
			*out = new(int)
			**out = **in
		}
		return nil
	}
}

// DeepCopywholepkgStructEmbedStructPrimitivePointers ...
func DeepCopywholepkgStructEmbedStructPrimitivePointers(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructEmbedStructPrimitivePointers)
		out := out.(*StructEmbedStructPrimitivePointers)
		*out = *in
		if err := DeepCopywholepkgStructPrimitivePointers(&in.StructPrimitivePointers, &out.StructPrimitivePointers, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopywholepkgStructEmbedStructPrimitives ...
func DeepCopywholepkgStructEmbedStructPrimitives(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructEmbedStructPrimitives)
		out := out.(*StructEmbedStructPrimitives)
		*out = *in
		return nil
	}
}

// DeepCopywholepkgStructEmbedStructSlices ...
func DeepCopywholepkgStructEmbedStructSlices(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructEmbedStructSlices)
		out := out.(*StructEmbedStructSlices)
		*out = *in
		if err := DeepCopywholepkgStructSlices(&in.StructSlices, &out.StructSlices, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopywholepkgStructEmpty ...
func DeepCopywholepkgStructEmpty(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructEmpty)
		out := out.(*StructEmpty)
		*out = *in
		return nil
	}
}

// DeepCopywholepkgStructEverything ...
func DeepCopywholepkgStructEverything(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructEverything)
		out := out.(*StructEverything)
		*out = *in
		out.ManualStructField = in.ManualStructField.DeepCopy()
		if in.BoolPtrField != nil {
			in, out := &in.BoolPtrField, &out.BoolPtrField
			*out = new(bool)
			**out = **in
		}
		if in.IntPtrField != nil {
			in, out := &in.IntPtrField, &out.IntPtrField
			*out = new(int)
			**out = **in
		}
		if in.StringPtrField != nil {
			in, out := &in.StringPtrField, &out.StringPtrField
			*out = new(string)
			**out = **in
		}
		if in.FloatPtrField != nil {
			in, out := &in.FloatPtrField, &out.FloatPtrField
			*out = new(float64)
			**out = **in
		}
		if err := DeepCopywholepkgStructPrimitivePointers(&in.PrimitivePointersField, &out.PrimitivePointersField, c); err != nil {
			return err
		}
		if in.ManualStructPtrField != nil {
			in, out := &in.ManualStructPtrField, &out.ManualStructPtrField
			*out = new(ManualStruct)
			**out = (*in).DeepCopy()
		}
		if in.ManualStructAliasPtrField != nil {
			in, out := &in.ManualStructAliasPtrField, &out.ManualStructAliasPtrField
			*out = new(ManualStructAlias)
			**out = **in
		}
		if in.SliceBoolField != nil {
			in, out := &in.SliceBoolField, &out.SliceBoolField
			*out = make([]bool, len(*in))
			copy(*out, *in)
		}
		if in.SliceByteField != nil {
			in, out := &in.SliceByteField, &out.SliceByteField
			*out = make([]byte, len(*in))
			copy(*out, *in)
		}
		if in.SliceIntField != nil {
			in, out := &in.SliceIntField, &out.SliceIntField
			*out = make([]int, len(*in))
			copy(*out, *in)
		}
		if in.SliceStringField != nil {
			in, out := &in.SliceStringField, &out.SliceStringField
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
		if in.SliceFloatField != nil {
			in, out := &in.SliceFloatField, &out.SliceFloatField
			*out = make([]float64, len(*in))
			copy(*out, *in)
		}
		if err := DeepCopywholepkgStructSlices(&in.SlicesField, &out.SlicesField, c); err != nil {
			return err
		}
		if in.SliceManualStructField != nil {
			in, out := &in.SliceManualStructField, &out.SliceManualStructField
			*out = make([]ManualStruct, len(*in))
			for i := range *in {
				(*out)[i] = (*in)[i].DeepCopy()
			}
		}
		if in.ManualSliceField != nil {
			out.ManualSliceField = in.ManualSliceField.DeepCopy()
		}
		return nil
	}
}

// DeepCopywholepkgStructPrimitivePointers ...
func DeepCopywholepkgStructPrimitivePointers(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructPrimitivePointers)
		out := out.(*StructPrimitivePointers)
		*out = *in
		if in.BoolPtrField != nil {
			in, out := &in.BoolPtrField, &out.BoolPtrField
			*out = new(bool)
			**out = **in
		}
		if in.IntPtrField != nil {
			in, out := &in.IntPtrField, &out.IntPtrField
			*out = new(int)
			**out = **in
		}
		if in.StringPtrField != nil {
			in, out := &in.StringPtrField, &out.StringPtrField
			*out = new(string)
			**out = **in
		}
		if in.FloatPtrField != nil {
			in, out := &in.FloatPtrField, &out.FloatPtrField
			*out = new(float64)
			**out = **in
		}
		return nil
	}
}

// DeepCopywholepkgStructPrimitivePointersAlias ...
func DeepCopywholepkgStructPrimitivePointersAlias(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructPrimitivePointersAlias)
		out := out.(*StructPrimitivePointersAlias)
		*out = *in
		if in.BoolPtrField != nil {
			in, out := &in.BoolPtrField, &out.BoolPtrField
			*out = new(bool)
			**out = **in
		}
		if in.IntPtrField != nil {
			in, out := &in.IntPtrField, &out.IntPtrField
			*out = new(int)
			**out = **in
		}
		if in.StringPtrField != nil {
			in, out := &in.StringPtrField, &out.StringPtrField
			*out = new(string)
			**out = **in
		}
		if in.FloatPtrField != nil {
			in, out := &in.FloatPtrField, &out.FloatPtrField
			*out = new(float64)
			**out = **in
		}
		return nil
	}
}

// DeepCopywholepkgStructPrimitives ...
func DeepCopywholepkgStructPrimitives(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructPrimitives)
		out := out.(*StructPrimitives)
		*out = *in
		return nil
	}
}

// DeepCopywholepkgStructPrimitivesAlias ...
func DeepCopywholepkgStructPrimitivesAlias(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructPrimitivesAlias)
		out := out.(*StructPrimitivesAlias)
		*out = *in
		return nil
	}
}

// DeepCopywholepkgStructSlices ...
func DeepCopywholepkgStructSlices(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructSlices)
		out := out.(*StructSlices)
		*out = *in
		if in.SliceBoolField != nil {
			in, out := &in.SliceBoolField, &out.SliceBoolField
			*out = make([]bool, len(*in))
			copy(*out, *in)
		}
		if in.SliceByteField != nil {
			in, out := &in.SliceByteField, &out.SliceByteField
			*out = make([]byte, len(*in))
			copy(*out, *in)
		}
		if in.SliceIntField != nil {
			in, out := &in.SliceIntField, &out.SliceIntField
			*out = make([]int, len(*in))
			copy(*out, *in)
		}
		if in.SliceStringField != nil {
			in, out := &in.SliceStringField, &out.SliceStringField
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
		if in.SliceFloatField != nil {
			in, out := &in.SliceFloatField, &out.SliceFloatField
			*out = make([]float64, len(*in))
			copy(*out, *in)
		}
		if in.SliceStructPrimitivesField != nil {
			in, out := &in.SliceStructPrimitivesField, &out.SliceStructPrimitivesField
			*out = make([]StructPrimitives, len(*in))
			copy(*out, *in)
		}
		if in.SliceStructPrimitivesAliasField != nil {
			in, out := &in.SliceStructPrimitivesAliasField, &out.SliceStructPrimitivesAliasField
			*out = make([]StructPrimitivesAlias, len(*in))
			copy(*out, *in)
		}
		if in.SliceStructPrimitivePointersField != nil {
			in, out := &in.SliceStructPrimitivePointersField, &out.SliceStructPrimitivePointersField
			*out = make([]StructPrimitivePointers, len(*in))
			for i := range *in {
				if err := DeepCopywholepkgStructPrimitivePointers(&(*in)[i], &(*out)[i], c); err != nil {
					return err
				}
			}
		}
		if in.SliceStructPrimitivePointersAliasField != nil {
			in, out := &in.SliceStructPrimitivePointersAliasField, &out.SliceStructPrimitivePointersAliasField
			*out = make([]StructPrimitivePointersAlias, len(*in))
			for i := range *in {
				if err := DeepCopywholepkgStructPrimitivePointersAlias(&(*in)[i], &(*out)[i], c); err != nil {
					return err
				}
			}
		}
		if in.SliceSliceIntField != nil {
			in, out := &in.SliceSliceIntField, &out.SliceSliceIntField
			*out = make([][]int, len(*in))
			for i := range *in {
				if (*in)[i] != nil {
					in, out := &(*in)[i], &(*out)[i]
					*out = make([]int, len(*in))
					copy(*out, *in)
				}
			}
		}
		if in.SliceManualStructField != nil {
			in, out := &in.SliceManualStructField, &out.SliceManualStructField
			*out = make([]ManualStruct, len(*in))
			for i := range *in {
				(*out)[i] = (*in)[i].DeepCopy()
			}
		}
		if in.ManualSliceField != nil {
			out.ManualSliceField = in.ManualSliceField.DeepCopy()
		}
		return nil
	}
}

// DeepCopywholepkgStructSlicesAlias ...
func DeepCopywholepkgStructSlicesAlias(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructSlicesAlias)
		out := out.(*StructSlicesAlias)
		*out = *in
		if in.SliceBoolField != nil {
			in, out := &in.SliceBoolField, &out.SliceBoolField
			*out = make([]bool, len(*in))
			copy(*out, *in)
		}
		if in.SliceByteField != nil {
			in, out := &in.SliceByteField, &out.SliceByteField
			*out = make([]byte, len(*in))
			copy(*out, *in)
		}
		if in.SliceIntField != nil {
			in, out := &in.SliceIntField, &out.SliceIntField
			*out = make([]int, len(*in))
			copy(*out, *in)
		}
		if in.SliceStringField != nil {
			in, out := &in.SliceStringField, &out.SliceStringField
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
		if in.SliceFloatField != nil {
			in, out := &in.SliceFloatField, &out.SliceFloatField
			*out = make([]float64, len(*in))
			copy(*out, *in)
		}
		if in.SliceStructPrimitivesField != nil {
			in, out := &in.SliceStructPrimitivesField, &out.SliceStructPrimitivesField
			*out = make([]StructPrimitives, len(*in))
			copy(*out, *in)
		}
		if in.SliceStructPrimitivesAliasField != nil {
			in, out := &in.SliceStructPrimitivesAliasField, &out.SliceStructPrimitivesAliasField
			*out = make([]StructPrimitivesAlias, len(*in))
			copy(*out, *in)
		}
		if in.SliceStructPrimitivePointersField != nil {
			in, out := &in.SliceStructPrimitivePointersField, &out.SliceStructPrimitivePointersField
			*out = make([]StructPrimitivePointers, len(*in))
			for i := range *in {
				if err := DeepCopywholepkgStructPrimitivePointers(&(*in)[i], &(*out)[i], c); err != nil {
					return err
				}
			}
		}
		if in.SliceStructPrimitivePointersAliasField != nil {
			in, out := &in.SliceStructPrimitivePointersAliasField, &out.SliceStructPrimitivePointersAliasField
			*out = make([]StructPrimitivePointersAlias, len(*in))
			for i := range *in {
				if err := DeepCopywholepkgStructPrimitivePointersAlias(&(*in)[i], &(*out)[i], c); err != nil {
					return err
				}
			}
		}
		if in.SliceSliceIntField != nil {
			in, out := &in.SliceSliceIntField, &out.SliceSliceIntField
			*out = make([][]int, len(*in))
			for i := range *in {
				if (*in)[i] != nil {
					in, out := &(*in)[i], &(*out)[i]
					*out = make([]int, len(*in))
					copy(*out, *in)
				}
			}
		}
		if in.SliceManualStructField != nil {
			in, out := &in.SliceManualStructField, &out.SliceManualStructField
			*out = make([]ManualStruct, len(*in))
			for i := range *in {
				(*out)[i] = (*in)[i].DeepCopy()
			}
		}
		if in.ManualSliceField != nil {
			out.ManualSliceField = in.ManualSliceField.DeepCopy()
		}
		return nil
	}
}

// DeepCopywholepkgStructStructPrimitivePointers ...
func DeepCopywholepkgStructStructPrimitivePointers(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructStructPrimitivePointers)
		out := out.(*StructStructPrimitivePointers)
		*out = *in
		if err := DeepCopywholepkgStructPrimitivePointers(&in.StructField, &out.StructField, c); err != nil {
			return err
		}
		return nil
	}
}

// DeepCopywholepkgStructStructPrimitives ...
func DeepCopywholepkgStructStructPrimitives(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructStructPrimitives)
		out := out.(*StructStructPrimitives)
		*out = *in
		return nil
	}
}

// DeepCopywholepkgStructStructSlices ...
func DeepCopywholepkgStructStructSlices(in interface{}, out interface{}, c *conversion.Cloner) error {
	{
		in := in.(*StructStructSlices)
		out := out.(*StructStructSlices)
		*out = *in
		if err := DeepCopywholepkgStructSlices(&in.StructField, &out.StructField, c); err != nil {
			return err
		}
		return nil
	}
}
